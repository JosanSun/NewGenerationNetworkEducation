C++基础---结构体(struct)

1. 结构体(struct)

1.1 结构体的概念
结构体(struct)：是由一系列具有相同类型或不同类型的数据构成的数据集合，叫做结构。
结构体(struct)：是一种复合数据类型，结构类型。 
注：“结构”是一种构造类型，它是由若干“成员”组成的。 每一个成员可以是一个基本数据类型或者又是一个构造类型。 结构即是一种“构造”而成的数据类型， 那么在说明和使用之前必须先定义它，也就是构造它。如同在说明和调用函数之前要先定义一样。

1.2 C语言中的结构体
说明：在C语言中，结构体(struct)是复合数据类型的一种。同时也是一些元素的集合，这些元素称为结构体的成员，且这些成员可以为不同的类型，成员一般用名字访问。结构体可以被声明为变量、指针或数组等，用以实现较复杂的数据结构。 
注：在C语言中，结构体不能包含函数。
定义与声明： 
(1)示例代码一：
struct tag 
{
    member-list
}variable-list;
注：struct为结构体关键字；
   tag为结构体的标志；
   member-list为结构体成员变量列表，其必须列出其所有成员；
   variable-list为此结构体声明的变量；

(2)示例代码二：

//此声明声明了拥有3个成员的结构体，分别为整型的a，字符型的b和双精度的c，但没有标明其标签，声明了结构体变量s1
struct 
{
    int a;
    char b;
    double c;
} s1;

//此声明声明了拥有3个成员的结构体，分别为整型的a，字符型的b和双精度的c，结构体的标签被命名为SIMPLE，用SIMPLE标签的结构体，另外声明了变量t1, t2[20], *t3
struct SIMPLE
{
    int a;
    char b;
    double c;
};
SIMPLE t1, t2[20], *t3; 

//可以用typedef创建新类型，此声明声明了拥有3个成员的结构体，分别为整型的a，字符型的b和双精度的c，结构体的标签被命名为Simple2，用Simple2作为类型声明新的结构体变量u1, u2[20], *u3
typedef struct
{
    int a;
    char b;
    double c; 
} Simple2;
Simple2 u1, u2[20], *u3;//若去掉typedef则编译报错，error C2371: “Simple2”: 重定义；不同的基类型

注：在上面的声明中，第一个和第二声明被编译器当作两个完全不同的类型，即使他们的成员列表是一样的，如果令t3=&s1，则是非法的。